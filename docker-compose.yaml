version: "3"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    volumes:
      - .:/app
    ports:
      - "8080:8080"
    networks:
      - app-network
    command: [ "air", "-c", "air.toml" ]
  
  dynamodb-circle:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-circle
    ports:
      - "8000:8000"
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", 'if [ "$(curl -s -o /dev/null -I -w ''%{http_code}'' http://localhost:8000)" == "400" ]; then exit 0; else exit 1; fi' ]
      interval: 5s
      timeout: 5s
      retries: 5

  dynamodb-admin:
    image: "aaronshaf/dynamodb-admin:latest"
    container_name: db-admin
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb-circle:8000
    ports:
      - "8001:8001"
    depends_on:
      dynamodb-circle:
        condition: service_healthy
    networks:
      - app-network

  aws-cli:
    image: amazon/aws-cli:latest
    container_name: migration
    environment:
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
    volumes:
      - "./:/workdir/"
    working_dir: /workdir
    entrypoint: [ "/bin/sh", "-c" ]
    command: >
      './script/init-dynamodb.sh && echo "DynamoDB initialized" && exit'
    depends_on:
      dynamodb-circle:
        condition: service_healthy
    networks:
      - app-network

  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    environment:
      SWAGGER_JSON: /api/openapi.yaml
    volumes:
      - ./openapi.yaml:/api/openapi.yaml:ro
    ports:
      - "127.0.0.1:4000:8080"

networks:
  app-network:
    driver: bridge